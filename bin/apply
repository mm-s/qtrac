#!/bin/bash

input=$1
shift

opt=$1

if [ "x$input" == "x" ]; then
	echo "please specify the qt-everywhere tarball file (qt-everywhere-*-src-*.tar.gz)"
	echo "if you have a file with another extension you can uncompress it manually and specify the resulting directory intead of a tar.gz file."
	exit 1
fi

BIN="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
#echo $BIN

if [ ! -f $input ]; then
	if [ -d $input ]; then
		qtdir=$input
		tgz=""
	else
		echo "I cannot find the supplied file. Aborting."
		exit 1
	fi
else
	tgz=$input
	qtdir=`echo $input | sed "s/\(.*\).tar.gz/\1/"`
	if [ -d $qtdir ]; then
		echo "A directory named $qtdir already exists. Aborting."
		exit 1
	fi
fi

qtracversion="1.0"
finalqtdir=${qtdir}-qtrac-$qtracversion
if [ -d $finalqtdir ]; then
	echo "A directory named $finalqtdir already exists. Aborting."
	exit 1
fi

quiltv=`quilt --version`
if [ ! $? -eq 0 ]; then
	echo "quilt must be installed in your system in order to proceed. Aborting"
	echo "see https://en.wikipedia.org/wiki/Quilt_%28software%29"
	exit 1
fi

echo "using quilt version $quiltv"

if [ "x$tgz" != "x" ]; then
	echo "uncompressing $tgz..."
	tar -xzf $tgz
	if [ ! $? -eq 0 ]; then
		echo "I found errors uncompressing the supplied file. Aborting."
		exit 1
	fi
fi

if [ ! -d $qtdir ]; then
	echo "A directory named $qtdir cannot be found. Aborting."
	exit 1
fi

cd $qtdir

pwd=`pwd`

licence=`echo $pwd | sed 's/.*qt-everywhere-\([a-z]*\)-src-.*/\1/'`
version=`echo $pwd | sed 's/.*qt-everywhere-[a-z]*-src-\(.*\)/\1/'`
echo 'Your qt package details:'
echo "   licence:   $licence"
echo "   version:   $version"
echo ""
version="${version}"

if [ ! -d $BIN/../qik/qt-$version ]; then
	echo "ERROR: Qt version $version is not currently supported by Qtrac"
	echo ""
	echo "Sorry about that, Currently supported versions are:"
	find $BIN/../qik -type d -name "qt-*" | sed "s/.*qt-\(.*\)/      \1/"
	echo ""
	echo "more information at https://github.com/mm-s/qtrac/wiki"
	exit 1
fi

if [ -d patches ]; then
	echo "Error: this copy of Qt has been already patched (it contains patches directory)."
	exit 1
fi

echo "patching package"

if [ "x$opt" == "x--edit" ]; then
	if [ "x$licence" != "xopensource" ]; then
		echo "Error, only opensource version is editable"
		exit 1
	fi
	ln -s $BIN/../qik/qt-$version/patches
else
	cp $BIN/../qik/qt-$version/patches . -R
	if [ "x$licence" == "xenterprise" ]; then
		cat $BIN/../qik/qt-$version/patches/qik | sed "s/qt-everywhere-opensource-src/qt-everywhere-enterprise-src/" > patches/qik
	fi
fi
quilt push
if [ ! $? -eq 0 ]; then
	echo "Error: could not patch sources successfully. Aborting"
	exit 1
fi


cd ..
mv $qtdir $finalqtdir


echo '.                                                                                .'
echo '.                                      >WWw,                                     .'
echo '.                                       `)WWW                                    .'
echo '.                                         )8WWu                ,uwu,             .'
echo '.                                          88WWWu            yWWWWWWWW,          .'
echo '.                                           ~8WWWWwu,       8#WWWWWWWW`          .'
echo '.                                             ~8WWWWWWWWwwwWWWWWWWWW*`           .'
echo '.                                               ~8WWWWWWWWWWWWWWWW*`             .'
echo '.                                                ##WWWWWWWWWWWW*`                .'
echo '.   ,,,ywu                                     y#WWWWWWWWWWWWWWWWWWWWWWWwwuuywwW>.'
echo '.WWWWWWWWWWWWWWWWWWwu,                       ,&#WWWWWWWWWWWWWWWWW==WWWWW=====**^ .'
echo '. `^***====WWWWWWWWWWWWWWwwu,,,,uwWWWWWWw,,uWWWWWWWWWWWWWWWWW`                   .'
echo '.            `*===WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW                     .'
echo '.                 `=WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*`                      .'
echo '.                    `*==WWWWWWWWWWWWWWWWWWWWWWWWWWWW*`                          .'
echo '.                        `*==WWWWWWWWWWWWWWWWWWWW=*`                             .'
echo '.                             ^*===WWWWWWWWWW=*`                                 .'
echo '.                    .d88888b.  888                                              .'
echo '.                   d88P` `Y88b 888                                              .'
echo '.                   888     888 888                                              .'
echo '.                   888     888 888888 888d888 8888b.   .d8888b                  .'
echo '.                   888     888 888    888P`      `88b d88P`                     .'
echo '.                   888 Y8b 888 888    888    .d888888 888                       .'
echo '.                   Y88b.Y8b88P Y88b.  888    888  888 Y88b.                     .'
echo '.                    `Y888888`   `Y888 888    `Y888888  `Y8888P                  .'
echo '.                          Y8b                                                   .'
echo '.                                                                                .'


echo "Congratulations!"
echo "Your instrumented copy of Qt is ready to be compiled at $finalqtdir"
echo "See $finalqtdir/README for building instructions."
echo ""
echo "Thanks for choosing Qtrac, always more at https://github.com/mm-s/qtrac/wiki"
echo "Consider upgrading to Qtrac-Pro, learn more at http://qtrac.org"
echo ""

echo $finalqtdir

